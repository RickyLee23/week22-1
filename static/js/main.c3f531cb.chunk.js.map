{"version":3,"sources":["utils.js","WebAPI.js","pages/RegisterPage/RegisterPage.js","pictures/scene.jpg","pages/AboutMePage/AboutMePage.js","contexts.js","pages/LoginPage/LoginPage.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","components/Header/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","page","itemPerPage","start","end","fetch","getMe","headers","authorization","then","res","json","ErrorMessage","styled","div","RegisterPageWrapper","InputInfo","RegisterPage","useState","nickname","setNickname","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","method","body","JSON","stringify","register","data","ok","message","push","value","onChange","target","AboutMeContainer","Picture","scene","Description","AboutMePage","AuthContext","createContext","LoginPageWrapper","LoginPage","setUser","useContext","login","response","toString","type","Root","Loading","PostContainer","PostTitle","Link","PostDate","PageSign","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","posts","setPosts","totalPage","setTotalPage","setPage","isLoading","setIsLoading","useEffect","Math","ceil","get","pageChanged","newSet","map","onClick","PostPage","setPost","useParams","getPost","NewPostPageWrapper","Info","User","NewPostPage","user","setTitle","content","setContent","preventDefault","newPost","cols","rows","HeaderContainer","Brand","span","Block","props","$active","NavSection1","NavSection2","Header","location","useLocation","pathname","App","React","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAMA,EAAa,QAENC,EAAe,SAACC,GAC3BC,aAAaC,QAAQJ,EAAYE,IAGtBG,EAAe,WAC1B,OAAOF,aAAaG,QAAQN,ICLxBO,EAAW,qCAEJC,EAAW,SAACC,EAAMC,GAC7B,IAAIC,EAAQF,EAAOC,EAAcA,EAC7BE,EAAMH,EAAOC,EACjB,OAAOG,MAAM,GAAD,OACPN,EADO,qDAC8CI,EAD9C,iBAC4DC,KAqB7DE,EAAQ,WACnB,IAAMZ,EAAQG,IACd,OAAOQ,MAAM,GAAD,OAAIN,EAAJ,OAAmB,CAC7BQ,QAAS,CACPC,cAAc,UAAD,OAAYd,MAE1Be,MAAK,SAACC,GAAD,OAASA,EAAIC,W,qSC9BvB,IAAMC,EAAeC,IAAOC,IAAV,KAGZC,EAAsBF,IAAOC,IAAV,KAInBE,EAAYH,IAAOC,IAAV,KAIA,SAASG,IAAgB,IAAD,EACLC,mBAAS,IADJ,mBAC9BC,EAD8B,KACpBC,EADoB,OAELF,mBAAS,IAFJ,mBAE9BG,EAF8B,KAEpBC,EAFoB,OAGLJ,mBAAS,IAHJ,mBAG9BK,EAH8B,KAGpBC,EAHoB,OAIGN,qBAJH,mBAI9BO,EAJ8B,KAIhBC,EAJgB,KAK/BC,EAAUC,cAchB,OACE,cAACb,EAAD,UACE,uBAAMc,SAdW,SAACC,GACpBJ,EAAgB,MD6BI,SAACP,EAAUE,EAAUE,GAC3C,OAAOlB,MAAM,GAAD,OAAIN,EAAJ,aAAyB,CACnCgC,OAAQ,OACRxB,QAAS,CACP,eAAgB,oBAElByB,KAAMC,KAAKC,UAAU,CACnBf,SAAUA,EACVE,SAAUA,EACVE,SAAUA,MAEXd,MAAK,SAACC,GAAD,OAASA,EAAIC,UCvCnBwB,CAAShB,EAAUE,EAAUE,GAAUd,MAAK,SAAC2B,GAC3B,IAAZA,EAAKC,GACPX,EAAgBU,EAAKE,SACA,IAAZF,EAAKC,IACdV,EAAQY,KAAK,cAQf,UACE,eAACvB,EAAD,uBAEE,uBACEwB,MAAOrB,EACPsB,SAAU,SAACX,GAAD,OAAOV,EAAYU,EAAEY,OAAOF,aAG1C,eAACxB,EAAD,uBAEE,uBACEwB,MAAOnB,EACPoB,SAAU,SAACX,GAAD,OAAOR,EAAYQ,EAAEY,OAAOF,aAG1C,eAACxB,EAAD,uBAEE,uBACEwB,MAAOjB,EACPkB,SAAU,SAACX,GAAD,OAAON,EAAYM,EAAEY,OAAOF,aAG1C,0CACCf,GAAgB,cAACb,EAAD,UAAea,SC5DzB,UAA0B,kC,ocCIzC,IAAMkB,EAAmB9B,IAAOC,IAAV,KAMhB8B,EAAU/B,IAAOC,IAAV,IACa+B,GAMpBC,EAAcjC,IAAOC,IAAV,KAIF,SAASiC,IACtB,OACE,eAACJ,EAAD,WACE,cAACC,EAAD,IACA,cAACE,EAAD,0ICvBC,IAAME,EAAcC,wBAAc,M,sMCKzC,IAAMrC,EAAeC,IAAOC,IAAV,KAGZoC,EAAmBrC,IAAOC,IAAV,KAKP,SAASqC,IAAa,IAC3BC,EAAYC,qBAAWL,GAAvBI,QAD0B,EAEFlC,mBAAS,IAFP,mBAE3BG,EAF2B,KAEjBC,EAFiB,OAGFJ,mBAAS,IAHP,mBAG3BK,EAH2B,KAGjBC,EAHiB,OAIMN,qBAJN,mBAI3BO,EAJ2B,KAIbC,EAJa,KAK5BC,EAAUC,cAqBhB,OACE,cAACsB,EAAD,UACE,uBAAMrB,SArBW,WACnBH,EAAgB,MLPC,SAACL,EAAUE,GAC9B,OAAOlB,MAAM,GAAD,OAAIN,EAAJ,UAAsB,CAChCgC,OAAQ,OACRxB,QAAS,CACP,eAAgB,oBAElByB,KAAMC,KAAKC,UAAU,CACnBb,WACAE,eAEDd,MAAK,SAACC,GAAD,OAASA,EAAIC,UKFnB2C,CAAMjC,EAAUE,GAAUd,MAAK,SAAC2B,GAC9B,GAAgB,IAAZA,EAAKC,GACP,OAAOX,EAAgBU,EAAKE,SAE9B7C,EAAa2C,EAAK1C,OAElBY,IAAQG,MAAK,SAAC8C,GACZ,GAAoB,IAAhBA,EAASlB,GAEX,OADA5C,EAAa,MACNiC,EAAgB6B,EAASC,YAElCJ,EAAQG,EAASnB,MACjBT,EAAQY,KAAK,YAOf,UACE,4CAEE,uBACEC,MAAOnB,EACPoB,SAAU,SAACX,GAAD,OAAOR,EAAYQ,EAAEY,OAAOF,aAG1C,4CAEE,uBACEiB,KAAK,WACLjB,MAAOjB,EACPkB,SAAU,SAACX,GAAD,OAAON,EAAYM,EAAEY,OAAOF,aAG1C,kDACCf,GAAgB,cAAC,EAAD,UAAeA,S,koCCtDxC,IAAMiC,EAAO7C,IAAOC,IAAV,KAKJ6C,EAAU9C,IAAOC,IAAV,KAcP8C,EAAgB/C,IAAOC,IAAV,KAYb+C,EAAYhD,YAAOiD,IAAPjD,CAAH,KAWTkD,EAAWlD,IAAOC,IAAV,KAGRkD,EAAWnD,IAAOC,IAAV,KAKd,SAASmD,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,eAACN,EAAD,WACE,cAACC,EAAD,CAAWM,GAAE,gBAAWD,EAAKE,IAA7B,SAAoCF,EAAKG,QACzC,cAACN,EAAD,UAAW,IAAIO,KAAKJ,EAAKK,WAAWC,sBAS3B,SAASC,IAAY,IAAD,EACPvD,mBAAS,IADF,mBAC1BwD,EAD0B,KACnBC,EADmB,OAECzD,qBAFD,mBAE1B0D,EAF0B,KAEfC,EAFe,OAGT3D,mBAAS,GAHA,mBAG1BjB,EAH0B,KAGpB6E,EAHoB,OAIC5D,oBAAS,GAJV,mBAI1B6D,EAJ0B,KAIfC,EAJe,KAOjCC,qBAAU,WACRjF,EAASC,EAHS,GAGUQ,MAAK,SAACyD,GAAD,OAC/BW,EAAaK,KAAKC,KAAKjB,EAAK3D,QAAQ6E,IAAI,iBAJxB,OAOlBJ,GAAa,GACbhF,EAASC,EARS,GASfQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACiE,GACLM,GAAa,GACbL,EAASD,QAEb,CAACzE,IAqBH,SAASoF,EAAYC,EAAQpF,GACvB6E,IAGJD,EAAQQ,GACRN,GAAa,GACbhF,EAASsF,EAAQpF,GACdO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACiE,GACLM,GAAa,GACbL,EAASD,OAIf,OACE,eAAChB,EAAD,WACGqB,GAAa,cAACpB,EAAD,0BACbe,EAAMa,KAAI,SAACrB,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKE,OAElB,wBAAQoB,QAvCY,WACtBH,EAAY,EAjBM,IAuDhB,gCACA,wBAAQG,QAjCe,WACZ,IAATvF,GACFoF,EAAYpF,EAAO,EAzBH,IAwDhB,gCACA,eAAC+D,EAAD,WACG/D,EADH,IACU2E,KAEV,wBAAQY,QA/BW,WACjBvF,IAAS2E,GACXS,EAAYpF,EAAO,EA/BH,IA4DhB,gCACA,wBAAQuF,QAzCW,WACrBH,EAAYT,EArBM,IA6DhB,yC,4cClIN,IAAMf,GAAYhD,IAAOC,IAAV,MAGTiD,GAAWlD,IAAOC,IAAV,MAIR8C,GAAgB/C,IAAOC,IAAV,MASbmD,GAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OAAKA,EAEH,eAAC,GAAD,WACE,cAAC,GAAD,UAAYA,EAAKG,QACjB,cAAC,GAAD,UAAW,IAAIC,KAAKJ,EAAKK,WAAWC,mBACpC,8BAAMN,EAAKlC,UALG,MAUL,SAASyD,KAAY,IAAD,EACTvE,mBAAS,IADA,mBAC1BgD,EAD0B,KACpBwB,EADoB,KAEzBtB,EAAOuB,cAAPvB,GAQR,OANAa,qBAAU,YPxBW,SAACb,GACtB,OAAO/D,MAAM,GAAD,OAAIN,EAAJ,kBAAsBqE,IAAM3D,MAAK,SAACC,GAAD,OAASA,EAAIC,WOwBxDiF,CAAQxB,GAAI3D,MAAK,SAAC2B,GAChBsD,EAAQtD,QAET,CAACgC,IAEG,cAAC,GAAD,CAAMF,KAAMA,I,kaCpCrB,IAAMtD,GAAeC,IAAOC,IAAV,MAGZ+E,GAAqBhF,IAAOC,IAAV,MAKlBgF,GAAOjF,IAAOC,IAAV,MAGJiF,GAAOlF,IAAOC,IAAV,MAIK,SAASkF,KAAe,IAC7BC,EAAS5C,qBAAWL,GAApBiD,KAD4B,EAEV/E,mBAAS,IAFC,mBAE7BmD,EAF6B,KAEtB6B,EAFsB,OAGNhF,mBAAS,IAHH,mBAG7BiF,EAH6B,KAGpBC,EAHoB,OAIIlF,qBAJJ,mBAI7BO,EAJ6B,KAIfC,EAJe,KAK9BC,EAAUC,cAYhB,OAAKqE,EAIH,cAACJ,GAAD,UACE,uBAAMhE,SAfW,SAACC,GACpBA,EAAEuE,iBACF3E,EAAgB,MRQG,SAAC2C,EAAOrC,GAC7B,IAAMtC,EAAQG,IACd,OAAOQ,MAAM,GAAD,OAAIN,EAAJ,UAAsB,CAChCgC,OAAQ,OACRxB,QAAS,CACPC,cAAc,UAAD,OAAYd,GACzB,eAAgB,oBAElBsC,KAAMC,KAAKC,UAAU,CACnBF,OACAqC,YAED5D,MAAK,SAACC,GAAD,OAASA,EAAIC,UQnBnB2F,CAAQjC,EAAO8B,GAAS1F,MAAK,SAAC2B,GACZ,IAAZA,EAAKC,IACPX,EAAgBU,EAAKE,SAEvBX,EAAQY,KAAK,SAQb,UACE,eAACwD,GAAD,0BAASE,EAAK5E,SAAd,4DACA,cAACyE,GAAD,qBACA,0BACES,KAAK,KACL/D,MAAO6B,EACP5B,SAAU,SAACX,GAAD,OAAOoE,EAASpE,EAAEY,OAAOF,UAErC,cAACsD,GAAD,uBACA,0BACEU,KAAK,KACLD,KAAK,KACL/D,MAAO2D,EACP1D,SAAU,SAACX,GAAD,OAAOsE,EAAWtE,EAAEY,OAAOF,UAEvC,8BACE,4CAEDf,GAAgB,cAAC,GAAD,UAAeA,SAtB7B,K,kvBCjCX,IAAMgF,GAAkB5F,IAAOC,IAAV,MAYf4F,GAAQ7F,IAAO8F,KAAV,MAILC,GAAQ/F,YAAOiD,IAAPjD,CAAH,MAKP,SAACgG,GAAD,OACAA,EAAMC,SAAN,kEAOEC,GAAclG,IAAOC,IAAV,MAKXkG,GAAcnG,IAAOC,IAAV,MAEF,SAASmG,KACtB,IAAMtF,EAAUC,cACVsF,EAAWC,cAFc,EAGL9D,qBAAWL,GAA7BiD,EAHuB,EAGvBA,KAAM7C,EAHiB,EAGjBA,QAUd,OACE,eAACqD,GAAD,WACE,eAACM,GAAD,WACE,cAACL,GAAD,+DACA,cAACE,GAAD,CAAOzC,GAAG,IAAI2C,QAA+B,MAAtBI,EAASE,SAAhC,0BAGA,cAACR,GAAD,CAAOzC,GAAG,WAAW2C,QAA+B,aAAtBI,EAASE,SAAvC,gCAGCnB,GACC,cAACW,GAAD,CAAOzC,GAAG,WAAW2C,QAA+B,aAAtBI,EAASE,SAAvC,yCAKJ,eAACJ,GAAD,WACE,cAACJ,GAAD,CAAOzC,GAAG,YAAY2C,QAA+B,cAAtBI,EAASE,SAAxC,2BAGEnB,GACA,cAACW,GAAD,CAAOzC,GAAG,SAAS2C,QAA+B,WAAtBI,EAASE,SAArC,0BAIDnB,GAAQ,cAACW,GAAD,CAAOpB,QAjCD,WACnB/F,EAAa,IACb2D,EAAQ,IACkB,MAAtB8D,EAASE,UACXzF,EAAQY,KAAK,MA6BF,gC,+FCnEjB,IAAMmB,GAAO7C,IAAOC,IAAV,MA8CKuG,OA1Cf,WAAgB,IAAD,EACWC,IAAMpG,SAAS,MAD1B,mBACN+E,EADM,KACA7C,EADA,KAWb,OARA6B,qBAAU,WACR3E,IAAQG,MAAK,SAAC8C,GACRA,EAASlB,IACXe,EAAQG,EAASnB,WAGpB,IAGD,cAACY,EAAYuE,SAAb,CAAsB/E,MAAO,CAAEyD,OAAM7C,WAArC,SACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC6D,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,SACE,cAAChD,EAAD,MAEF,cAAC,IAAD,CAAOgD,KAAK,YAAZ,SACE,cAAChC,GAAD,MAEF,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC1E,EAAD,MAEF,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,WAAlB,SACE,cAACzB,GAAD,MAEF,cAAC,IAAD,CAAOyB,KAAK,YAAZ,SACE,cAACxG,EAAD,MAEF,cAAC,IAAD,CAAOwG,KAAK,SAAZ,SACE,cAACtE,EAAD,iBCtCCuE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnH,MAAK,YAAkD,IAA/CoH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.c3f531cb.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page, itemPerPage) => {\n  let start = page * itemPerPage - itemPerPage;\n  let end = page * itemPerPage;\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_start=${start}&_end=${end}`\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      body,\n      title,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n","import React, { useState } from \"react\";\nimport { register } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst RegisterPageWrapper = styled.div`\n  text-align: center;\n  margin: 100px;\n`;\nconst InputInfo = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null);\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        setErrorMessage(data.message);\n      } else if (data.ok === 1) {\n        history.push(\"/login\")\n      }\n\n    });\n  };\n\n  return (\n    <RegisterPageWrapper>\n      <form onSubmit={handleSubmit}>\n        <InputInfo>\n          nickname:\n          <input\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n          />\n        </InputInfo>\n        <InputInfo>\n          username:\n          <input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </InputInfo>\n        <InputInfo>\n          password:\n          <input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </InputInfo>\n        <button>POST</button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </form>\n    </RegisterPageWrapper>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/scene.09a14954.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport scene from \"../../pictures/scene.jpg\";\n\nconst AboutMeContainer = styled.div`\n  text-align: center;\n  width: 570px;\n  margin: 80px auto;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nconst Picture = styled.div`\n  background-image: url(${scene});\n  background-position: center center;\n  height: 300px;\n  max-width: 100%;\n`;\n\nconst Description = styled.div`\n  padding: 20px;\n`;\n\nexport default function AboutMePage() {\n  return (\n    <AboutMeContainer>\n      <Picture />\n      <Description>這裡是一個非技術超簡易部落格＾＾歡迎光臨</Description>\n    </AboutMeContainer>\n  );\n}\n","import {createContext} from 'react'\n\nexport const AuthContext = createContext(null)\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst LoginPageWrapper = styled.div`\n  text-align: center;\n  margin: 100px;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null); // 有出錯，要順便把 token 清空\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginPageWrapper>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username:\n          <input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button>登入</button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </form>\n    </LoginPageWrapper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Root = styled.div`\n  text-align: center;\n  margin-top: 80px;\n  text-decoration: none;\n`;\nconst Loading = styled.div`\n  z-index: 999;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  width: 700px;\n  margin: 0px auto;\n  :hover {\n    background: rgba(0, 12, 34, 0.2);\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  width: 400px;\n  text-align: left;\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: blue;\n  }\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\nconst PageSign = styled.div`\n  margin: 20px 20px;\n  display: inline-block;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [totalPage, setTotalPage] = useState();\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const itemPerPage = 5;\n\n  useEffect(() => {\n    getPosts(page, itemPerPage).then((post) =>\n      setTotalPage(Math.ceil(post.headers.get(\"X-Total-Count\") / itemPerPage))\n    );\n\n    setIsLoading(true);\n    getPosts(page, itemPerPage)\n      .then((res) => res.json())\n      .then((posts) => {\n        setIsLoading(false);\n        setPosts(posts);\n      });\n  },[page]);\n\n  const handleFirstPage = () => {\n    pageChanged(1, itemPerPage);\n  };\n\n  const handleLastPage = () => {\n    pageChanged(totalPage, itemPerPage);\n  };\n  const handlePreviousPage = () => {\n    if (page !== 1) {\n      pageChanged(page - 1, itemPerPage);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (page !== totalPage) {\n      pageChanged(page + 1, itemPerPage);\n    }\n  };\n\n  function pageChanged(newSet, itemPerPage) {\n    if (isLoading) {\n      return;\n    }\n    setPage(newSet);\n    setIsLoading(true);\n    getPosts(newSet, itemPerPage)\n      .then((res) => res.json())\n      .then((posts) => {\n        setIsLoading(false);\n        setPosts(posts);\n      });\n  }\n\n  return (\n    <Root>\n      {isLoading && <Loading>Loading....</Loading>}\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <button onClick={handleFirstPage}>第一頁</button>\n      <button onClick={handlePreviousPage}>上一頁</button>\n      <PageSign>\n        {page}/{totalPage}\n      </PageSign>\n      <button onClick={handleNextPage}>下一頁</button>\n      <button onClick={handleLastPage}>最後一頁</button>\n    </Root>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getPost } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\n\nconst PostTitle = styled.div`\n  font-size: 30px;\n`;\nconst PostDate = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nconst PostContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.7);\n  width: 500px;\n  margin: 80px auto;\n  padding: 20px;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  word-break: break-word;\n`;\n\nconst Post = ({ post }) => {\n  if (!post) return null;\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      <div>{post.body}</div>\n    </PostContainer>\n  );\n};\n\nexport default function PostPage() {\n  const [post, setPost] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPost(id).then((data) => {\n      setPost(data);\n    });\n  }, [id]);\n\n  return <Post post={post} />;\n}\n","import React, { useState, useContext } from \"react\";\nimport { newPost } from \"../../WebAPI\";\nimport { AuthContext } from \"../../contexts\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst NewPostPageWrapper = styled.div`\n  margin: 100px auto;\n  font-size: 20px;\n  text-align: center;\n`;\nconst Info = styled.div`\n  margin: 0px auto;\n`;\nconst User = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport default function NewPostPage() {\n  const { user } = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    newPost(title, content).then((data) => {\n      if (data.ok === 0) {\n        setErrorMessage(data.message);\n      }\n      history.push(\"/\");\n    });\n  };\n  if (!user) {\n    return null;\n  }\n  return (\n    <NewPostPageWrapper>\n      <form onSubmit={handleSubmit}>\n        <User>嗨，{user.username}，有什麼話要說嗎？</User>\n        <Info>title:</Info>\n        <textarea\n          cols=\"50\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <Info>content:</Info>\n        <textarea\n          rows=\"10\"\n          cols=\"50\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        />\n        <div>\n          <button>POST</button>\n        </div>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </form>\n    </NewPostPageWrapper>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 70px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  background: white;\n`;\nconst Brand = styled.span`\n  font-size: 25px;\n  margin-left: 20px;\n`;\nconst Block = styled(Link)`\n  margin: 20px;\n  text-decoration: none;\n  color: black;\n  cursor: pointer;\n  ${(props) =>\n    props.$active &&\n    `\n    font-size:20px;\n    background:rgba(0,0,0,0.1);\n    `}\n`;\n\nconst NavSection1 = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavSection2 = styled.div``;\n\nexport default function Header() {\n  const history = useHistory();\n  const location = useLocation();\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(\"\");\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <NavSection1>\n        <Brand>你的第一個部落格</Brand>\n        <Block to=\"/\" $active={location.pathname === \"/\"}>\n          首頁\n        </Block>\n        <Block to=\"/aboutMe\" $active={location.pathname === \"/aboutMe\"}>\n          關於我\n        </Block>\n        {user && (\n          <Block to=\"/newPost\" $active={location.pathname === \"/newPost\"}>\n            發布文章\n          </Block>\n        )}\n      </NavSection1>\n      <NavSection2>\n        <Block to=\"/register\" $active={location.pathname === \"/register\"}>\n          註冊\n        </Block>\n        {!user && (\n          <Block to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Block>\n        )}\n        {user && <Block onClick={handleLogout}>登出</Block>}\n      </NavSection2>\n    </HeaderContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getMe } from \"../WebAPI\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport AboutMePage from \"../pages/AboutMePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport HomePage from \"../pages/HomePage\";\nimport PostPage from \"../pages/PostPage\";\nimport NewPostPage from \"../pages/NewPostPage\";\nimport Header from \"./Header\";\nimport { AuthContext } from \"../contexts\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = React.useState(null);\n\n  useEffect(() => {\n    getMe().then((response) => {\n      if (response.ok) {\n        setUser(response.data);\n      }\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostPage />\n            </Route>\n            <Route exact path=\"/aboutMe\">\n              <AboutMePage />\n            </Route>\n            <Route exact path=\"/newPost\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}